Index: src/main/java/xyz/kiradev/managers/ScoreboardManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package xyz.kiradev.managers;\r\n\r\nimport org.bukkit.entity.Player;\r\nimport xyz.kiradev.Stellar;\r\nimport xyz.kiradev.commands.user.KitEditorCMD;\r\nimport xyz.kiradev.listeners.PlayerDataListener;\r\nimport xyz.kiradev.player.PlayerState;\r\nimport xyz.kiradev.utils.PlayerUtils;\r\nimport xyz.kiradev.utils.assemble.AssembleAdapter;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\npublic class ScoreboardManager implements AssembleAdapter {\r\n\r\n    private final String lobbyTitle;\r\n    private final List<String> scoreboardLobby;\r\n    private final List<String> scoreboardMatch;\r\n    private final List<String> scoreboardInQueue;\r\n    private final List<String> scoreboardGameEnd;\r\n    private final List<String> scoreboardKiteditor;\r\n\r\n    private int playingPlayers;\r\n    private final List<String> animatedTexts;\r\n    private final int updateInterval;\r\n\r\n    public ScoreboardManager() {\r\n        int updateInterval1;\r\n        lobbyTitle = ConfigManager.scoreboardConfig.getString(\"scoreboard.title\");\r\n        scoreboardLobby = ConfigManager.scoreboardConfig.getStringList(\"scoreboard.lobby\");\r\n        scoreboardMatch = ConfigManager.scoreboardConfig.getStringList(\"scoreboard.match\");\r\n        scoreboardInQueue = ConfigManager.scoreboardConfig.getStringList(\"scoreboard.in-queue\");\r\n        scoreboardGameEnd = ConfigManager.scoreboardConfig.getStringList(\"scoreboard.game-ended\");\r\n        scoreboardKiteditor = ConfigManager.scoreboardConfig.getStringList(\"scoreboard.kit-editor\");\r\n        animatedTexts = ConfigManager.scoreboardConfig.getStringList(\"animation.animated_texts\");\r\n        updateInterval1 = ConfigManager.scoreboardConfig.getInt(\"animation.update_interval\");\r\n\r\n        if(updateInterval1 <= 0){\r\n            updateInterval1 = 3;\r\n        }\r\n        updateInterval = updateInterval1;\r\n    }\r\n\r\n    @Override\r\n    public String getTitle(Player player) {\r\n        return lobbyTitle;\r\n    }\r\n\r\n    @Override\r\n    public List<String> getLines(Player p) {\r\n        PlayerState playerState = PlayerUtils.getState(p);\r\n\r\n        switch (playerState){\r\n            case ENDED:\r\n                return getGameEnd();\r\n            case LOBBY:\r\n                return getLobbyLines(p);\r\n            case INQUEUE:\r\n                return getInQueueLines(p);\r\n            case PLAYING:\r\n                return getMatchLines(p);\r\n            case KITEDITOR:\r\n                return getScoreboardKiteditor(p);\r\n        }\r\n        return Collections.emptyList();\r\n    }\r\n\r\n    private List<String> getLobbyLines(Player p) {\r\n        List<String> lobbyLines = new ArrayList<>();\r\n\r\n        for (String line : scoreboardLobby) {\r\n            line = line.replace(\"{online_players}\" , String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));\r\n            line = line.replace(\"{playing_players}\" , String.valueOf(QueueManager.playing));\r\n            line = line.replace(\"{queueing_players}\" , String.valueOf(QueueManager.Queue.size()));\r\n            line = line.replace(\"{elo}\" , String.valueOf(PlayerDataListener.getStats(p).getELO()));\r\n            line = line.replace(\"{division}\" , String.valueOf(ConfigManager.divisionsManager.getPlayerDivision(PlayerDataListener.getStats(p).getELO())));\r\n\r\n            if (line.contains(\"{animated_text}\")) {\r\n                line = line.replace(\"{animated_text}\", getAnimatedText());\r\n            }\r\n\r\n            lobbyLines.add(line);\r\n        }\r\n        return lobbyLines;\r\n    }\r\n\r\n    private String getAnimatedText() {\r\n        int index = (int) ((System.currentTimeMillis() / updateInterval) % animatedTexts.size());\r\n        return animatedTexts.get(index);\r\n    }\r\n\r\n    private List<String> getMatchLines(Player player) {\r\n        List<String> matchLines = new ArrayList<>();\r\n        UUID matchID = MatchManager.getMatchID(player);\r\n        List<Player> matchPlayers = MatchManager.getMatchPlayers(matchID);\r\n\r\n        if (matchPlayers != null && matchPlayers.size() >= 2) {\r\n            Player user = matchPlayers.get(0);\r\n            Player opponent = matchPlayers.get(1);\r\n\r\n            int userPing = PlayerUtils.getPing(user);\r\n            int opponentPing = PlayerUtils.getPing(opponent);\r\n\r\n            for (String line : scoreboardMatch) {\r\n                line = line.replace(\"{online_players}\", String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));\r\n                line = line.replace(\"{playing_players}\", String.valueOf(QueueManager.playing));\r\n                line = line.replace(\"{user_ping}\", String.valueOf(userPing));\r\n                line = line.replace(\"{opponent_ping}\", String.valueOf(opponentPing));\r\n\r\n                if (line.contains(\"{animated_text}\")) {\r\n                    line = line.replace(\"{animated_text}\", getAnimatedText());\r\n                }\r\n                matchLines.add(line);\r\n            }\r\n        }\r\n\r\n        return matchLines;\r\n    }\r\n\r\n    private List<String> getInQueueLines(Player p) {\r\n        List<String> inQueueLines = new ArrayList<>();\r\n        for (String line : scoreboardInQueue) {\r\n            line = line.replace(\"{kit}\", QueueManager.Queue.get(p));\r\n            line = line.replace(\"{online_players}\", String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));\r\n            line = line.replace(\"{playing_players}\", String.valueOf(playingPlayers));\r\n            line = line.replace(\"{queueing_players}\", String.valueOf(QueueManager.Queue.size()));\r\n\r\n            if (line.contains(\"{animated_text}\")) {\r\n                line = line.replace(\"{animated_text}\", getAnimatedText());\r\n            }\r\n            inQueueLines.add(line);\r\n        }\r\n        return inQueueLines;\r\n    }\r\n\r\n    private List<String> getScoreboardKiteditor(Player p) {\r\n        List<String> inQueueLines = new ArrayList<>();\r\n        for (String line : scoreboardKiteditor) {\r\n            line = line.replace(\"{kit}\", KitEditorCMD.kiteditor.get(p).getName());\r\n            line = line.replace(\"{online_players}\", String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));\r\n            line = line.replace(\"{playing_players}\", String.valueOf(playingPlayers));\r\n            line = line.replace(\"{queueing_players}\", String.valueOf(QueueManager.Queue.size()));\r\n\r\n            if (line.contains(\"{animated_text}\")) {\r\n                line = line.replace(\"{animated_text}\", getAnimatedText());\r\n            }\r\n            inQueueLines.add(line);\r\n        }\r\n        return inQueueLines;\r\n    }\r\n\r\n    private List<String> getGameEnd() {\r\n        return new ArrayList<>(scoreboardGameEnd);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/xyz/kiradev/managers/ScoreboardManager.java b/src/main/java/xyz/kiradev/managers/ScoreboardManager.java
--- a/src/main/java/xyz/kiradev/managers/ScoreboardManager.java	(revision a59076ab392e9ce6299ee8918fcaaa55bbc46719)
+++ b/src/main/java/xyz/kiradev/managers/ScoreboardManager.java	(date 1698839570464)
@@ -21,8 +21,6 @@
     private final List<String> scoreboardInQueue;
     private final List<String> scoreboardGameEnd;
     private final List<String> scoreboardKiteditor;
-
-    private int playingPlayers;
     private final List<String> animatedTexts;
     private final int updateInterval;
 
@@ -124,7 +122,7 @@
         for (String line : scoreboardInQueue) {
             line = line.replace("{kit}", QueueManager.Queue.get(p));
             line = line.replace("{online_players}", String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));
-            line = line.replace("{playing_players}", String.valueOf(playingPlayers));
+            line = line.replace("{playing_players}" , String.valueOf(QueueManager.playing));
             line = line.replace("{queueing_players}", String.valueOf(QueueManager.Queue.size()));
 
             if (line.contains("{animated_text}")) {
@@ -140,7 +138,7 @@
         for (String line : scoreboardKiteditor) {
             line = line.replace("{kit}", KitEditorCMD.kiteditor.get(p).getName());
             line = line.replace("{online_players}", String.valueOf(Stellar.instance.getServer().getOnlinePlayers().size()));
-            line = line.replace("{playing_players}", String.valueOf(playingPlayers));
+            line = line.replace("{playing_players}" , String.valueOf(QueueManager.playing));
             line = line.replace("{queueing_players}", String.valueOf(QueueManager.Queue.size()));
 
             if (line.contains("{animated_text}")) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"617ba883-ed92-47d4-8c3a-8e7c598a687b\" name=\"Changes\" comment=\"A\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/ArenaCMD.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/ArenaCMD.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/KitsCMD.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/KitsCMD.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/managers/ScoreboardManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/xyz/kiradev/managers/ScoreboardManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-archiver/pom.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-archiver/pom.properties\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2XZ18JFg1ZHd39NbWFyG4ngLin6\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Stellar&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Stellar\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" nameIsGenerated=\"true\">\r\n      <MavenSettings>\r\n        <option name=\"myGeneralSettings\" />\r\n        <option name=\"myRunnerSettings\" />\r\n        <option name=\"myRunnerParameters\">\r\n          <MavenRunnerParameters>\r\n            <option name=\"profiles\">\r\n              <set />\r\n            </option>\r\n            <option name=\"goals\">\r\n              <list />\r\n            </option>\r\n            <option name=\"pomFileName\" />\r\n            <option name=\"profilesMap\">\r\n              <map />\r\n            </option>\r\n            <option name=\"resolveToWorkspace\" value=\"false\" />\r\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\r\n          </MavenRunnerParameters>\r\n        </option>\r\n      </MavenSettings>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"617ba883-ed92-47d4-8c3a-8e7c598a687b\" name=\"Changes\" comment=\"\" />\r\n      <created>1698821629918</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698821629918</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Players can now only break when playing build kit\">\r\n      <created>1698822751957</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698822751957</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Fixed scoreboard\">\r\n      <created>1698826369389</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698826369389</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Players can now only break when playing build kit\" />\r\n    <MESSAGE value=\"Fixed scoreboard\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed scoreboard\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a59076ab392e9ce6299ee8918fcaaa55bbc46719)
+++ b/.idea/workspace.xml	(date 1698839565412)
@@ -4,11 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="617ba883-ed92-47d4-8c3a-8e7c598a687b" name="Changes" comment="A">
-      <change beforePath="$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/ArenaCMD.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/ArenaCMD.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/KitsCMD.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/xyz/kiradev/commands/admin/KitsCMD.java" afterDir="false" />
+    <list default="true" id="617ba883-ed92-47d4-8c3a-8e7c598a687b" name="Changes" comment="Added /kit save and /arena save">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/xyz/kiradev/managers/ScoreboardManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/xyz/kiradev/managers/ScoreboardManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-archiver/pom.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-archiver/pom.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -82,12 +80,20 @@
       <option name="project" value="LOCAL" />
       <updated>1698826369389</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Added /kit save and /arena save">
+      <created>1698835149970</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1698835149970</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Players can now only break when playing build kit" />
     <MESSAGE value="Fixed scoreboard" />
-    <option name="LAST_COMMIT_MESSAGE" value="Fixed scoreboard" />
+    <MESSAGE value="Added /kit save and /arena save" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added /kit save and /arena save" />
   </component>
 </project>
\ No newline at end of file
